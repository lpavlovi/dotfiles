#!/bin/bash

help() {
    echo "cmd [-s|-m|-l] -f \"spark job feature config\" [--start-date 2021-01-01] [--end-date 2021-01-01] [--exec]"
    exit 0
}
spark_args_small="spark.cores.max=64 spark.executor.memory=8g spark.driver.memory=8g spark.executor.cores=2"
spark_args_medium="spark.cores.max=128 spark.executor.memory=16g spark.driver.memory=16g spark.executor.cores=4"
spark_args_large="spark.cores.max=256 spark.executor.memory=32g spark.driver.memory=32g spark.executor.cores=8"
spark_args_even_bigger="spark.cores.max=400 spark.executor.memory=32g spark.executor.cores=8 spark.driver.memory=16g spark.driver.maxResultSize=4g spark.driver.cores=8"
spark_args=$spark_args_small
dry_run_option=""
feature_config=""
checkpoint_option=""
aws_profile="prod-biz"
start_date=$(date +%Y-%m-%d)
end_date=$(date +%Y-%m-%d)
echo_not_eval=true

while getopts ":hr:p:csmldf:-:" arg; do
    case "${arg}" in
        c)
            checkpoint_option="--checkpoint"
            ;;
        s)
            spark_args=$spark_args_small
            ;;
        m)
            spark_args=$spark_args_medium
            ;;
        l)
            spark_args=$spark_args_large
            ;;
        p)
            aws_profile=${OPTARG}
            ;;
        f)
            feature_config="/code/"${OPTARG}
            ;;
        d)
            dry_run_option="--dry-run"
            ;;
        r)
            start_date="${OPTARG}"
            end_date="${OPTARG}"
            ;;
        h)
            help
            ;;
        -)
            case "${OPTARG}" in
                start-date)
                    start_date="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ))
                    ;;
                end-date)
                    end_date="${!OPTIND}"; OPTIND=$(( $OPTIND + 1 ))
                    ;;
                exec)
                    echo_not_eval=false
                    ;;
                even-bigger)
                    spark_args=$spark_args_even_bigger
                    ;;
                *)
                    help
                    ;;
            esac;;

        *)
            help
            ;;
    esac
done
shift $((OPTIND -1))

if [ -z "$feature_config" ] ; then
    echo "You must specify a feature config with -f"
    exit 1;
fi

echo "spark-args:" $spark_args
echo "feature_config:" $feature_config
echo "start-date:" $start_date
echo "end-date:" $end_date
echo

paasta_command="paasta spark-run \
    --cluster pnw-devc --build \
    --spark-args \"$spark_args\" \
    --aws-profile $aws_profile \
    --aws-region us-west-2 \
    -C \"USER=$(whoami) spark-submit /code/virtualenv_run/lib/python3.7/site-packages/spark_etl/spark_etl_runner.py \
        --feature-config $feature_config \
        --start-date $start_date \
        --end-date $end_date \
        --notify-email $(whoami)@yelp.com \
        --team-name biz-multiloc-rep \
        $dry_run_option \
        $checkpoint_option \
        --no-notification \
        --publish-path s3a://yelp-biz-stats-us-west-2/dev/$(whoami)/ \
        --scratch-path s3a://yelp-biz-stats-us-west-2/dev/scratch/$(whoami)/\""
if [ "$echo_not_eval" = true ] ; then
  echo "PaaSTA Command:"
  echo $paasta_command
else
  eval $paasta_command
fi
